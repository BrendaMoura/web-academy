// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
	cpf String @id @db.VarChar(20)
	ts_criacao DateTime @default(now())
  	ts_alteracao DateTime @updatedAt
	nome String @db.VarChar(100)
  	email String @unique @db.VarChar(100)
  	celular String @db.VarChar(20)
  	data_nasc DateTime

  	enderecos Endereco[]
  	pedidos Pedido[]
}

model Endereco{
	id Int @id @default(autoincrement())
	rua String  @db.VarChar(100)
	numero Int
	bairro String  @db.VarChar(100)
	cep Int

	cpf String @db.VarChar(20)
	usuario Usuario @relation(fields: [cpf], references: [cpf], onDelete: Cascade)

	pedidos Pedido[]
}

model Pagamento{
	id Int @id @default(autoincrement())
	tipo String @unique @db.VarChar(50)

	pedidos Pedido[]
}

model Modelo{
	id Int @id @default(autoincrement())
	tipo String @unique @db.VarChar(50)

	numeros_series Num_serie_modelo[]
	produtos Produto[]
}

model Num_serie_modelo{
	numero_serie Int @id

	id_modelo Int
	modelo Modelo @relation(fields: [id_modelo], references: [id], onDelete: Cascade)
}

model Categoria{
	id Int @id @default(autoincrement())
	tipo String @unique @db.VarChar(50)

	produtos Produto[]
}

model Subcategoria{
	id Int @id @default(autoincrement())
	tipo String @unique @db.VarChar(50)

	produtos Subcategoria_produto[]
}

model Produto{
	id Int @id @default(autoincrement())
	ts_criacao DateTime @default(now())
  	ts_alteracao DateTime @updatedAt
	fabricante String @db.VarChar(150)
	preco_base Int
	estoque Int

	id_modelo Int
	modelo Modelo @relation(fields: [id_modelo], references: [id], onDelete: Cascade)

	id_categoria Int
	categoria Categoria @relation(fields: [id_categoria], references: [id], onDelete: Restrict)

	subcategoria Subcategoria_produto[]
	pedidos Pedido_produto[]
}

model Subcategoria_produto{
	id_produto Int
	produto Produto @relation(fields: [id_produto], references: [id], onDelete: Cascade)

	id_subcategoria Int
	subcategoria Subcategoria @relation(fields: [id_subcategoria], references: [id], onDelete: Restrict)

	@@id([id_produto, id_subcategoria])
}

model Pedido{
	id Int @id @default(autoincrement())
	
	desconto Int
	total Int
	ts_criacao DateTime @default(now())

	cpf String? @db.VarChar(20)
	usuario Usuario? @relation(fields: [cpf], references: [cpf], onDelete: SetNull)

	id_endereco Int?
	endereco Endereco? @relation(fields: [id_endereco], references: [id], onDelete: SetNull)

	id_pagamento Int
	pagamento Pagamento @relation(fields: [id_pagamento], references: [id], onDelete: Restrict)

	produtos Pedido_produto[]
}

model Pedido_produto{
	quantidade Int

	id_produto Int
	produto Produto @relation(fields: [id_produto], references: [id], onDelete: Cascade)

	id_pedido Int
	pedido Pedido @relation(fields: [id_pedido], references: [id], onDelete: Cascade)

	@@id([id_produto, id_pedido])
}

